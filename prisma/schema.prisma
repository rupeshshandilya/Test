// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(uuid())
  firstName        String
  lastName         String
  email            String        @unique
  password         String
  country          String
  isVerified       Boolean       @default(false)
  role             Role          @default(USER)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  sentMessages     Message[]     @relation("SentMessages")
  receivedMessages Message[]     @relation("ReceivedMessages")
  groups           GroupMember[]
}

model Message {
  id         String   @id @default(uuid())
  content    String
  senderId   String
  receiverId String?
  groupId    String?
  createdAt  DateTime @default(now())
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User?    @relation("ReceivedMessages", fields: [receiverId], references: [id])
  group      Group?   @relation(fields: [groupId], references: [id])
}

model Group {
  id        String        @id @default(uuid())
  name      String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  messages  Message[]
  members   GroupMember[]
}

model GroupMember {
  id       String   @id @default(uuid())
  userId   String
  groupId  String
  role     Role     @default(USER)
  joinedAt DateTime @default(now())
  user     User     @relation(fields: [userId], references: [id])
  group    Group    @relation(fields: [groupId], references: [id])

  @@unique([userId, groupId])
}

enum Role {
  USER
  ADMIN
}
